plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.adarshr.test-logger' version '2.1.1'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

application {
	mainClass = 'hexlet.code.AppApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'io.jsonwebtoken:jjwt:0.11.5'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

diffChangeLog {
	dependsOn compileJava
}

testlogger {
	showStandardStreams = true
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

checkstyle {
	toolVersion '9.0'
}

wrapper {
	gradleVersion = '7.6'
}

// Настраиваем Liquibase
liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			url 'jdbc:h2:./taskManager'
			username ''
			password ''
			referenceUrl 'hibernate:spring:io.hexlet.javaspringblog.model.' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}
